@page "/"
@inject IJSRuntime JS

<link rel="stylesheet" href="./css/openlayer/ol.css" />
<style>
    .map {
        width: 100%;
        height: 720px;
        border-style: solid;
        border-width: 1px;
    }
</style>

<DxFormLayout CssClass="w-100">
    <DxFormLayoutItem Caption="Red:">
        <DxSpinEdit @bind-Value="@red" Id="R" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Green:">
        <DxSpinEdit @bind-Value="@green" Id="G"/>
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Blue:">
        <DxSpinEdit @bind-Value="@blue" Id="B" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Alpha:">
        <DxTextBox @bind-Text="@alpha" Id="A"/>
    </DxFormLayoutItem>
</DxFormLayout>
<div id="map" class="map" tabindex="0"></div>
<div id="coordinates"></div>
<button id="selectbtn">Select</button>
<button id="drawbtn">Draw</button>


@code {
    private IJSObjectReference? module;
    private int red;
    private int green;
    private string? alpha;
    private int blue;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/index.bundle.js");
        }
    }

    protected async Task AddSelectInteraction()
    {
        Console.WriteLine("click select feature button");
        if(module != null)
            await module.InvokeVoidAsync("onSelectFeature");
    }

    protected async Task AddDrawInteraction()
    {
        Console.WriteLine("click draw feature button");
        if(module != null)
            await module.InvokeVoidAsync("onDrawFeature");
    }
}